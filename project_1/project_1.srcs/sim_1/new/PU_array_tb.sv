`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 12/09/2024 11:10:02 PM
// Design Name: 
// Module Name: PU_array_tb
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module PU_array_tb#(parameter IN_SIZE = 10, BUFFER_SIZE = 10, DWIDTH = 16, fractional = 5);

reg clk;
reg load_en;
reg nreset;
reg [DWIDTH*BUFFER_SIZE-1:0] in_data;
reg [DWIDTH*BUFFER_SIZE-1:0] weight;
reg [DWIDTH-1:0] bias;
wire [DWIDTH-1:0] neuron_out;
wire neuron_done;
wire [DWIDTH*BUFFER_SIZE-1:0] out_PU_ins;
wire [DWIDTH-1:0] out_adder_tree;
wire [DWIDTH-1:0] out_add_sum_bias;


//wire valid;
//assign valid = PU_arr.PU_mul_add.valid;

//wire [DWIDTH-1:0] res_1;
//assign res_1 = PU_arr.PU_mul_add.res_1;

//wire [DWIDTH-1:0] result;
//assign result = PU_arr.PU_mul_add.result;

pu_array# (IN_SIZE,BUFFER_SIZE,DWIDTH,fractional) PU_arr (
                                                    clk,load_en,nreset,in_data,weight,
                                                    bias,neuron_out,neuron_done, out_PU_ins, out_adder_tree, out_add_sum_bias);

initial begin
    clk = 1'b1;
    forever #10 clk = ~clk;
end

initial begin
    nreset = 0;
    load_en = 0;
    @(posedge clk);
    nreset = 1;

//    bias = 32'b00000000000000000000000000000000;
//    bias = 32'b00000000000000100000000000000000;
//    bias = 16'b0000000001000000; // Test case 1 : so nguyen  OK
    bias = 16'b0000000000000000;   // Test case 2 : so thuc 16 bit, 5 bit thap phan 
//    bias = 16'h0000;
    @(posedge clk);
    #1
    load_en = 1;
      
//    //**basic case**//
//    in_data = {16'h0001, 16'h0001};
//    weight = {16'h0002, 16'h0002};
  
//    @(posedge clk);
//    #1
//    load_en = 1;
//    in_data = {16'h0001, 16'h0001};
//    weight = {16'h0002, 16'h0002};
//    bias = 16'h0002;
//    @(posedge clk);
//    #1
//    load_en = 0;
//    in_data = {16'h0000, 16'h0000};
//    weight = {16'h0000, 16'h0000};
//    bias = 16'h0000;
//    //**basic case**//
    

//// Test case 1
//    in_data = {
//        16'b0000000000100000,
//        16'b0000000000100000,
//        16'b0000000000100000,
//        16'b0000000000100000,
//        16'b0000000000100000,
//        16'b0000000000100000,
//        16'b0000000000100000,
//        16'b0000000000100000,
//        16'b0000000000100000,
//        16'b0000000000100000
//    };
//    weight = {
//        16'b0000000000100000,
//        16'b0000000001000000,
//        16'b0000000001100000,
//        16'b0000000010000000,
//        16'b0000000010100000,
//        16'b0000000011000000,
//        16'b0000000011100000,
//        16'b0000000100000000,
//        16'b0000000100100000,
//        16'b0000000101000000
//    };
// Test case 2
    in_data = {
        16'b1111111100000110,
        16'b0000000111101000,
        16'b1111100110110000,
        16'b1111111001110100,
        16'b1111110000111110,
        16'b1111111100000110,
        16'b0000000001001000,
        16'b0000011001010000,
        16'b0000000010010001,
        16'b1111110000111110
    };
    weight = {
        16'b0000000010111100,
        16'b0000000100010010,
        16'b0000000001000011,
        16'b1111111010101100,
        16'b0000000001011000,
        16'b0000000110011100,
        16'b0000000001110010,
        16'b0000000001001000,
        16'b0000000110010101,
        16'b0000000001011000
    };
    bias = 16'b0000000000000010;// Test case 2 : so thuc 16 bit, 5 bit thap phan 
    @(posedge clk);
    #1
    load_en = 0;
    in_data = {
        16'b0000000000000000,
        16'b0000000000000000,
        16'b0000000000000000,
        16'b0000000000000000,
        16'b0000000000000000,
        16'b0000000000000000,
        16'b0000000000000000,
        16'b0000000000000000,
        16'b0000000000000000,
        16'b0000000000000000
    };
    weight = {
        16'b0000000000000000,
        16'b0000000000000000,
        16'b0000000000000000,
        16'b0000000000000000,
        16'b0000000000000000,
        16'b0000000000000000,
        16'b0000000000000000,
        16'b0000000000000000,
        16'b0000000000000000,
        16'b0000000000000000
    };
    bias = 16'b0000000000000000;
      
//    in_data = '{
//        32'b11111111000001100000000000000000,
//        32'b00000001111010000000000000000000,
//        32'b11111001101100000000000000000000,
//        32'b11111110011101000000000000000000,
//        32'b11111100001111100000000000000000,
//        32'b11111111000001100000000000000000,
//        32'b00000000010010000101000111101011,
//        32'b00000110010100000000000000000000,
//        32'b00000000100100011000000100000110,
//        32'b11111100001111100000000000000000
//    };
//    weight = '{
//        32'b00000000101111000000000000000000,
//        32'b00000001000100101100000010000011,
//        32'b00000000010000111101111100111011,
//        32'b11111110101011000000000000000000,
//        32'b00000000010110000000000000000000,
//        32'b00000001100111000000000000000000,
//        32'b00000000011100101101000011100101,
//        32'b00000000010010001001101110100101,
//        32'b00000001100101010110000001000001,
//        32'b00000000010110000000000000000000
//    };

//    in_data = '{
//        27'b111111110000010000000000000,
//        27'b000000011110100000000000000,
//        27'b111110011011000000000000000,
//        27'b111111100111010000000000000,
//        27'b111111000011111000000000000,
//        27'b111111110000011000000000000,
//        27'b000000000100100000000000000,
//        27'b000001100101000000000000000,
//        27'b000000001001000110000001000,
//        27'b111111000011111000000000000
//    };
//    weight = '{
//        27'b000000001011110000000000000,
//        27'b000000010001001011000000100,
//        27'b000000000100001111011111001,
//        27'b111111101010110000000000000,
//        27'b000000000101100000000000000,
//        27'b000000011001110000000000000,
//        27'b000000000111001011010000111,
//        27'b000000000100100010011011101,
//        27'b000000011001010101100000010,
//        27'b000000000101100000000000000
//    };
//    in_data = '{
//        15'b111111110000011,
//        15'b000000011110100,
//        15'b111110011011000,
//        15'b111111100111010,
//        15'b111111000011111,
//        15'b111111110000011,
//        15'b000000000100100,
//        15'b000001100101000,
//        15'b000000001001000,
//        15'b111111000011111
//    };
//    weight = '{
//        15'b000000011001110,
//        15'b000000010001001,
//        15'b000000000100001,
//        15'b111111101010110,
//        15'b000000000101100,
//        15'b000000001011110,
//        15'b000000000111001,
//        15'b000000000100100,
//        15'b000000011001010,
//        15'b000000000101100
//    };
    
end
endmodule
